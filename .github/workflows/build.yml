name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test

  build:
    needs: tests
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Verify JAR File
        run: ls -lh target/
      - name: Upload JAR File
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/data-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    name: Deploy to Render
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3
      - name: Download JAR File
        uses: actions/download-artifact@v3
        with:
          name: jar-file
          path: target/
      - name: Build Docker image
        run: docker build -t my-app .
      - name: Log in to Render Docker Registry
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: echo ${{ secrets.RENDER_API_KEY }} | docker login registry.render.com/demo-cicd -u render --password-stdin
      - name: Push Docker image
        run: |
          docker tag my-app registry.render.com/demo-cicd:latest
          docker push registry.render.com/demo-cicd:latest
      - name: Trigger Render deployment
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST https://api.render.com/v1/services/srv-ct5afg9u0jms73acse6g/deployments \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -F "branch=main" \
            -F "commit=${{ github.sha }}"