name: CI/CD Pipeline

on:
  # Manually trigger workflow runs
  workflow_dispatch:
  # Trigger the workflow on push from the main branch
  push:
    branches:
      - main

jobs:
  # Test job
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository
      - uses: actions/checkout@v2
      # Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Run tests using Maven
      - name: Run Tests
        run: mvn -B test

  # Build job
  build:
    needs: tests  # Run after tests pass
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository
      - uses: actions/checkout@v2
      # Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Build the application using Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      # Upload JAR file as an artifact
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-artifact
          path: target/data-0.0.1-SNAPSHOT.jar

  # Deploy job
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build  # Ensure the build step is completed before deploying
    steps:
      # Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v2

      # Install Render CLI and dependencies
      - name: Install Node.js and Render CLI
        run: |
          # Install Node.js 20 (LTS) - the recommended version
          curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs

          # Install Render CLI using npm
          npm install -g render-cli

      # Verify Render CLI Installation
      - name: Verify Render CLI Installation
        run: render --version

      # Deploy to Render using the JAR file
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}  # Use GitHub secret for Render API key
        run: |
          # Deploy the built JAR to Render using Render CLI
          JAR_FILE=target/data-0.0.1-SNAPSHOT.jar
          render deploy --service demo-cicd --branch main --commit ${{ github.sha }} --file $JAR_FILE
